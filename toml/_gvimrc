"
"  ██████╗ ██╗   ██╗██╗███╗   ███╗██████╗  ██████╗
" ██╔════╝ ██║   ██║██║████╗ ████║██╔══██╗██╔════╝
" ██║  ███╗██║   ██║██║██╔████╔██║██████╔╝██║
" ██║   ██║╚██╗ ██╔╝██║██║╚██╔╝██║██╔══██╗██║
" ╚██████╔╝ ╚████╔╝ ██║██║ ╚═╝ ██║██║  ██║╚██████╗
"  ╚═════╝   ╚═══╝  ╚═╝╚═╝     ╚═╝╚═╝  ╚═╝ ╚═════╝
" Last Change: 01-May-2019.
" Maintainer:  TH

"Neovim{{{
"if has('nvim')
"endif
"}}}

"フォント設定{{{
if has('win32') || has ('win64')
	if has('nvim')
		Guifont! Ricty_Diminished:h12
		call GuiWindowMaximized(1)
	else
	set guifont=Cica:h12
	endif
	set printfont=Cica:h8
	set renderoptions=type:directx,renmode:5
	set ambiwidth=double
	set enc=utf-8
	source $VIMRUNTIME/delmenu.vim
	set langmenu=ja_jp.utf-8
	source $VIMRUNTIME/menu.vim
	set antialias
	set linespace=1
  if has('kaoriya')
    set ambiwidth=auto
  endif
elseif has('mac')
  set guifont=Osaka－等幅:h14
elseif has('xfontset')
  set guifontset=a14,r14,k14
endif
"透過
set transparency=240
"最大化で起動
au GUIEnter * simalt ~x
SM 5
"}}}

"{{{複数起動抑制
"" If starting gvim && arguments were given
" (assuming double-click on file explorer)
if has('gui_running') && argc()
    let s:running_vim_list = filter(
    \   split(serverlist(), '\n'),
    \   'v:val !=? v:servername')
    " If one or more Vim instances are running
    if !empty(s:running_vim_list)
        " Open given files in running Vim and exit.
        silent execute '!start gvim'
        \   '--servername' s:running_vim_list[0]
        \   '--remote-tab-silent' join(argv(), ' ')
        qa!
    endif
    unlet s:running_vim_list
endif
"}}}

"メニューバーツールバー消す{{{
set guioptions-=T
set guioptions-=m
set guioptions-=r
set guioptions-=R
set guioptions-=l
set guioptions-=L
set guioptions-=b
set guioptions-=e
set showtabline=2
"}}}

let g:webdevicons_conceal_nerdtree_brackets = 1
if exists("g:loaded_webdevicons")
  call webdevicons#refresh()
endif

